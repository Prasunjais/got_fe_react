{"version":3,"sources":["Resources/images/logo.svg","Resources/images/logo2.svg","Resources/images/logo3.svg","Resources/images/logo4.svg","Resources/images/bolton.svg","Resources/images/johnSnow.svg","Actions/battle.js","Utils/generateActionTypes.js","Reducers/battle.js","Reducers/index.js","AppConfig/Api.js","Services/Battles.js","Components/SearchBar.js","Pages/Home/index.js","Containers/Home.js","history.js","ScrollToTop.js","App.js","index.js"],"names":["module","exports","actionTypes","constants","forEach","constant","generateActionTypes","storeLocationList","data","dispatch","type","LOCATION_LIST","SCROLL_TO_TOP","BATTLE_DETAILS","initialState","combineReducers","battle","state","action","scrollToTop","shouldBeScrolledToTop","locationList","battleDetails","dev","base_url","configVariables","process","REACT_APP_BUILD_ENV","searchForBattles","a","king","location","query","axios","get","APIConfig","request","status","results","Option","AutoComplete","searchResult","searchWithLocation","searchWithKing","searchWithType","category","count","length","renderOption","item","key","text","className","href","target","rel","searchAPIDebounced","AwesomeDebouncePromise","SearchBar","props","onSelect","value","updateTheBattleDetails","console","log","handleSearch","setState","dataSource","result","this","style","width","size","color","map","onSearch","placeholder","optionLabelProp","suffix","marginRight","Component","index","split","src","alt","border","class","logo","logo2","logo3","logo4","johnSnow","data-holder-rendered","ramsay","val","idx","Toast","ToastHeader","name","year","battleType","region","ToastBody","attackerKing","defenderKing","attackerOutcome","majorDeath","attackerCommander","defenderCommander","majorCapture","note","withRouter","connect","bindActionCreators","Home","history","createBrowserHistory","ScrollToTop","prevProps","clear","children","handlePageChange","window","scrollTo","scrollRestoration","App","componentDidMount","path","exact","component","HomePage","onEnter","from","to","store","applyMiddleware","thunk","createStore","createStoreWithMiddleware","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e253c174.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cd9c7440.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo2.50bd2ddb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo3.7bdeef18.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo4.fd979064.svg\";","module.exports = __webpack_public_path__ + \"static/media/bolton.bf03a6fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/johnSnow.10fee5d0.svg\";","import generateActionTypes from '../Utils/generateActionTypes'\n//import axios from 'axios'\n\nexport const actionTypes = generateActionTypes('SCROLL_TO_TOP', 'LOCATION_LIST', 'BATTLE_DETAILS')\n\nexport function scrollToTop(clear = false) {\n  return dispatch => {\n    return dispatch({ type: actionTypes.SCROLL_TO_TOP, shouldBeScrolledToTop: !clear })\n  }\n}\n\nexport function storeLocationList(data) {\n  return dispatch => {\n    return dispatch({ type: actionTypes.LOCATION_LIST, data: data })\n  }\n}\n\nexport function battleDetails() {\n  return dispatch => {\n    return dispatch({ type: actionTypes.BATTLE_DETAILS })\n  }\n}\n\n\n","/**\r\n * Reduce boilerplate by\r\n * generate action types\r\n *\r\n * @param {array} constants\r\n * @return {object} response\r\n */\r\nexport default function generateActionTypes(...constants) {\r\n    let actionTypes = {}\r\n\r\n    constants.forEach(constant => {\r\n        actionTypes = {\r\n            ...actionTypes,\r\n            [constant]: constant\r\n        }\r\n    })\r\n\r\n    return actionTypes\r\n}\r\n","import { actionTypes } from '../Actions/battle'\nconst {\n  SCROLL_TO_TOP, LOCATION_LIST, BATTLE_DETAILS\n} = actionTypes;\n\nconst initialState = {\n  \"locationList\": [{\n    \"_id\": \"\",\n    \"name\": \"Battle Search\",\n    \"summer\": true,\n    \"year\": 0,\n    \"location\": \"\",\n    \"region\": \"\",\n    \"note\": \"\",\n    \"battleNumber\": 0,\n    \"attackerKing\": \"\",\n    \"defenderKing\": \"\",\n    \"attackerOutcome\": \"\",\n    \"battleType\": \"\",\n    \"majorDeath\": 0,\n    \"majorCapture\": 0,\n    \"attackerSize\": 0,\n    \"defenderSize\": 0,\n    \"attackerCommander\": \"\",\n    \"defenderCommander\": \"\",\n    \"attackers\": [],\n    \"defenders\": []\n  }]\n}\n\nexport default function test(state = initialState, action) {\n  switch (action.type) {\n    case SCROLL_TO_TOP:\n      return { ...state, scrollToTop: action.shouldBeScrolledToTop }\n    case LOCATION_LIST:\n      return { ...state, locationList: action.data };\n    case BATTLE_DETAILS:\n      return { ...state, battleDetails: action.data };\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\r\n\r\nimport battle from './battle'\r\n\r\nexport default combineReducers({\r\n    battle\r\n});","const dev = {\r\n  base_url: \"https://gotbackend.herokuapp.com/api/v1/\"\r\n};\r\n\r\nconst staging = {\r\n  base_url: \"https://gotbackend.herokuapp.com/api/v1/\"\r\n};\r\n\r\nconst uat = {\r\n  base_url: \"https://gotbackend.herokuapp.com/api/v1/\"\r\n}\r\n\r\nconst production = {\r\n  base_url: \"https://gotbackend.herokuapp.com/api/v1/\"\r\n}\r\n\r\nlet configVariables = {\r\n  ...dev\r\n};\r\n\r\n//Change the config for production and development\r\nswitch (process.env.REACT_APP_BUILD_ENV) {\r\n  case \"staging\":\r\n    configVariables = {\r\n      ...staging\r\n    };\r\n    break;\r\n  case \"uat\":\r\n    configVariables = {\r\n      ...uat\r\n    };\r\n    break;\r\n  case \"production\":\r\n    configVariables = {\r\n      ...production\r\n    };\r\n    break;\r\n  default:\r\n    configVariables = {\r\n      ...dev\r\n    };\r\n    break;\r\n}\r\n\r\n// ecporting the defaults \r\nexport default {\r\n  ...configVariables\r\n}\r\n","import axios from 'axios';\nimport { api as APIConfig } from '../AppConfig';\n\n//Get Application Information\nexport const searchForBattles = async (king = false, location = false, type = false) => {\n  let query = '';\n  if (king)\n    query = query + `king=${king}`;\n  if (location)\n    query = query + `&location=${location}`;\n  if (type)\n    query = query + `&type=${type}`;\n\n  // hitting the api \n  let request = await axios.get(\n    APIConfig.base_url + `/battle/search/?${query}&skip=0&limit=50` ,\n  );\n\n  // if the search is success\n  if (request.status == 200)\n    return request.data.data;\n  else return {\n    results: []\n  }\n}\n","import React, { Component } from 'react';\nimport { Icon, Button, Input, AutoComplete } from 'antd';\nimport { searchForBattles } from '../Services/Battles';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\n\nconst { Option } = AutoComplete;\n\nconst searchResult = async (query) => {\n  let searchWithLocation = await searchForBattles(false, query, false);\n  let searchWithKing = await searchForBattles(query, false, false);\n  let searchWithType = await searchForBattles(false, false, query);\n\n  return [{\n    query,\n    category: `King`,\n    count: searchWithKing.results.length,\n  }, {\n    query,\n    category: `Location`,\n    count: searchWithLocation.results.length,\n  }, {\n    query,\n    category: `Type`,\n    count: searchWithType.results.length,\n  }]\n}\n\nfunction renderOption(item) {\n  return (\n    <Option key={`${item.category},${item.query}`} text={item.category}>\n      <div className=\"global-search-item\">\n        <span className=\"global-search-item-desc\">\n          Found {item.query} on &nbsp;\n          <a\n            href={`https://gotbackend.herokuapp.com/api/v1/battle/search?location=${item.query}&skip=0&limit=10`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"ml-2\"\n          >\n            {item.category}\n          </a>\n        </span>\n        <span className=\"global-search-item-count\">{item.count} results</span>\n      </div>\n    </Option>\n  );\n}\n\n\nconst searchAPIDebounced = AwesomeDebouncePromise(searchResult, 50);\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n    };\n  }\n\n  onSelect = (value) => {\n    this.props.updateTheBattleDetails(value);\n    console.log('Im selected ', value);\n  }\n\n  handleSearch = async (value) => {\n    this.setState({ dataSource: value ? [] : [], });\n    const result = await searchAPIDebounced(value);\n    this.setState({ dataSource: result ? result : [] });\n  };\n\n  render() {\n    const { dataSource } = this.state;\n    return (\n      <div className=\"global-search-wrapper\" style={{ width: 400 }}>\n        <AutoComplete\n          className=\"global-search\"\n          size=\"large\"\n          style={{ width: '100%', color: 'black' }}\n          dataSource={dataSource.map(renderOption)}\n          onSelect={this.onSelect}\n          onSearch={this.handleSearch}\n          placeholder=\"Search for GOT\"\n          optionLabelProp=\"text\"\n        >\n          <Input\n            suffix={\n              <Button\n                className=\"search-btn\"\n                style={{ marginRight: -12 }}\n                size=\"large\"\n                type=\"primary\"\n              >\n                <Icon type=\"search\" />\n              </Button>\n            }\n          />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","import React, { Component, Fragment } from 'react';\nimport SearchBar from '../../Components/SearchBar';\nimport logo from '../../Resources/images/logo.svg';\nimport logo2 from '../../Resources/images/logo2.svg';\nimport logo3 from '../../Resources/images/logo3.svg';\nimport logo4 from '../../Resources/images/logo4.svg';\nimport ramsay from '../../Resources/images/bolton.svg';\nimport johnSnow from '../../Resources/images/johnSnow.svg';\nimport { searchForBattles } from '../../Services/Battles';\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  updateTheBattleDetails = async (data) => {\n    let query = data.split(',');\n    console.log('The query here is --> ', query);\n    let result = '';\n    if (query[0] == 'King')\n      result = await searchForBattles(query[1], false, false)\n    if (query[0] == 'Location')\n      result = await searchForBattles(false, query[1], false)\n    if (query[0] == 'Type')\n      result = await searchForBattles(false, false, query[1])\n    // updating the props\n    this.props.storeLocationList(result.results);\n  }\n\n  render() {\n    const { battle, locationList } = this.props;\n    return (\n      <Fragment>\n        <div className=\"container-fluid py-4 backgroundPattrn\">\n          <div className=\"row px-4 py-2\">\n            <div className=\"col-md-8 col-sm-12\">\n              <div className=\"row\">\n                <div className=\"col-md-6 m-3 expand expand-portrait text-white\">\n                  <a href=\"https://fontmeme.com/game-of-thrones-font/\"><img src=\"https://fontmeme.com/permalink/200227/d3f2919b6356d629c15beea3e1f139e0.png\" alt=\"game-of-thrones-font\" border=\"0\" /></a>\n                  <div class=\"d-flex align-items-center py-3\">\n                    <SearchBar updateTheBattleDetails={this.updateTheBattleDetails} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-4 col-sm-12\">\n              <div class=\"d-flex flex-row bd-highlight mb-3\">\n                <img src={logo} alt=\"icon\" width=\"80px\" className=\"mr-2\" />\n                <img src={logo2} alt=\"icon\" width=\"80px\" className=\"mr-2\" />\n                <img src={logo3} alt=\"icon\" width=\"80px\" className=\"mr-2\" />\n                <img src={logo4} alt=\"icon\" width=\"80px\" className=\"mr-2\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"row my-1 \">\n            <div className=\"col-md-12\">\n              <div class=\"d-flex justify-content-center my-5\">\n                <a href=\"https://fontmeme.com/game-of-thrones-font/\"><img src=\"https://fontmeme.com/permalink/200227/243ea3b3bc4332def6984631bbb8b624.png\" alt=\"game-of-thrones-font\" border=\"0\" /></a>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-center\">\n              <img className=\"rounded-circle z-depth-2\" width=\"20%\" alt=\"100x100\" src={johnSnow}\n                data-holder-rendered=\"true\" />\n              <img className=\"rounded-circle z-depth-2\" alt=\"100x100\" width=\"20%\" src={ramsay}\n                data-holder-rendered=\"true\" />\n            </div>\n            <div className=\"table-battle-list px-3\">\n              {locationList.length &&\n                <div class=\"d-flex justify-content-center my-5\">\n                  <a href=\"https://fontmeme.com/game-of-thrones-font/\"><img src=\"https://fontmeme.com/permalink/200227/3f9e8d2a7612f8591d3000047b68c607.png\" alt=\"game-of-thrones-font\" border=\"0\" /></a>\n                </div>}\n              {locationList.length && locationList.map((val, idx) => {\n                return <div className=\"p-3 my-2 rounded bg-docs-transparent-grid\">\n                  <Toast>\n                    <ToastHeader>\n                      {idx + 1} - {val.name} - ({val.year}) | {val.battleType} | {val.region}\n                    </ToastHeader>\n                    <ToastBody>\n                      {val.attackerKing} (Attacker King) V/S {val.defenderKing} (Defender King) <br />\n                      Attacker Outcome - {val.attackerOutcome} | Major Deaths - {val.majorDeath} <br />\n                      Attacker Commander - {val.attackerCommander} | Defender Commander - {val.defenderCommander} <br />\n                      Major Capture - {val.majorCapture} | note - {val.note} <br />\n                    </ToastBody>\n                  </Toast>\n                  <hr />\n                </div>\n              })}\n            </div>\n          </div>\n        </div >\n      </Fragment >\n    );\n  }\n}\n\nexport default index;","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport Home from '../Pages/Home';\n\n//Action Creator\nimport { storeLocationList } from '../Actions/battle';\n\nconst mapStateToProps = state => {\n  return { battle: state.battle, locationList: state.battle.locationList }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    storeLocationList\n  }, dispatch)\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home))","// history.js\r\nimport { createBrowserHistory } from 'history'\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport history from './history';\r\nimport { scrollToTop } from './Actions/battle';\r\n\r\nclass ScrollToTop extends Component {\r\n    componentDidUpdate(prevProps) {\r\n        const { dispatch } = this.props;\r\n        if (this.props.location !== prevProps.location) {\r\n            dispatch(scrollToTop())\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(null)(ScrollToTop))\r\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport React, { Component } from 'react';\nimport { Router, Route, Switch, Redirect } from 'react-router-dom';\nimport HomePage from './Containers/Home';\nimport history from './history';\nimport { storeLocationList } from './Actions/battle';\nimport ScrollToTop from './ScrollToTop';\nimport { Button } from 'antd';\nimport message from 'antd/lib/message';\n\n//Utils\nimport './Resources/css/style.css';\nimport './Resources/css/responsive.css';\nimport 'antd/dist/antd.css';\n\n//Scroll the page to top on route changeapplication.applicationdetails\nconst handlePageChange = () => {\n  window.scrollTo(0, 0);\n  if ('scrollRestoration' in history) {\n    history.scrollRestoration = 'manual';\n  }\n}\n\nclass App extends Component {\n\n  // constructor \n  constructor(props) {\n    super(props);\n    this.state = {\n      \"_id\": \"\",\n      \"name\": \"\",\n      \"summer\": true,\n      \"year\": 0,\n      \"location\": \"\",\n      \"region\": \"\",\n      \"note\": \"\",\n      \"battleNumber\": 0,\n      \"attackerKing\": \"\",\n      \"defenderKing\": \"\",\n      \"attackerOutcome\": \"\",\n      \"battleType\": \"\",\n      \"majorDeath\": 0,\n      \"majorCapture\": 0,\n      \"attackerSize\": 0,\n      \"defenderSize\": 0,\n      \"attackerCommander\": \"\",\n      \"defenderCommander\": \"\",\n      \"attackers\": [],\n      \"defenders\": []\n    }\n  }\n\n\n  componentDidMount = () => {\n    console.log('render');\n    // this.isUserAuthorized();\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        {/* <div className=\"row\" style={{overflowX:'hidden'}}> */}\n        <div className=\"row\">\n          <Router history={history} >\n            <ScrollToTop>\n              <Switch>\n                <Route path=\"/\" exact component={HomePage} onEnter={handlePageChange} />\n                <Redirect from='*' to='/404' />\n              </Switch>\n            </ScrollToTop>\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { battle: state.battle }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    storeLocationList,\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './Reducers/index'\nimport thunk from 'redux-thunk';\nimport App from './App'\n\nlet createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\nlet store = createStoreWithMiddleware(reducers);\n\nif (process.env.NODE_ENV !== 'production') {\n  store = createStoreWithMiddleware(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}